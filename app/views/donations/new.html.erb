<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card">
        <div class="card-header">
          <h2 class="text-center">Donar a Salvando Patitas</h2>
        </div>
        <div class="card-body">
          <%= form_with model: @donation, local: true, data: { turbo: true } do |f| %>
            <% if @donation.errors.any? %>
              <div class="alert alert-danger">
                <h4><%= pluralize(@donation.errors.count, "error") %> impidieron guardar esta donación:</h4>
                <ul>
                  <% @donation.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                  <% end %>
                </ul>
              </div>
            <% end %>
            
            <div class="mb-3">
              <%= f.label :amount, "Monto a donar", class: "form-label" %>
              <div class="input-group">
                <span class="input-group-text">$</span>
                <%= f.number_field :amount, min: 1, class: "form-control", required: true %>
              </div>
            </div>
            <div class="mb-3">
              <%= f.label :donation_type, "Tipo de donación", class: "form-label" %>
              <%= f.select :donation_type,
                    options_for_select([
                      ['Dinero',    'money'],
                      ['Alimento',  'food'],
                      ['Medicinas', 'medicine'],
                      ['Otros',     'other']
                    ], selected: @donation.donation_type),
                    {}, class: "form-select", required: true %>
            </div>
            
            <div class="mb-3">
              <%= f.label :description, "Mensaje (opcional)", class: "form-label" %>
              <%= f.text_area :description, class: "form-control", rows: 3 %>
            </div>
            <div class="mb-3">
              <%= f.label :payment_method, "Método de pago", class: "form-label" %>
              <%= f.select :payment_method, 
                  options_for_select([
                    ['Transferencia Bancaria', 'bank_transfer'],
                    ['Mercado Pago', 'mercado_pago'],
                    ['Efectivo', 'cash']
                  ]),
                  {},
                  class: "form-select",
                  id: "payment-method-select",
                  required: true %>
            </div>

            <div id="bank-payment-instructions" class="payment-instructions mb-3 p-3 bg-light rounded">
              <h5>Datos para transferencia bancaria:</h5>
              <p><strong>CBU:</strong> 4530000800012665727738</p>
            </div>

            <div id="mercado-pago-instructions" class="payment-instructions mb-3 p-3 bg-light rounded d-none">
              <h5>Datos para Mercado Pago:</h5>
              <p>Al usar Mercado Pago serás redirigido a la plataforma para completar tu donación de forma segura.</p>
              <div class="d-grid gap-2 mt-3">
                <button type="submit" class="btn btn-primary">
                  <i class="fas fa-external-link-alt me-2"></i>Donar con Mercado Pago
                </button>
              </div>
              <small class="text-muted mt-2 d-block">No es necesario subir comprobante, la donación se registrará automáticamente</small>
            </div>

            <div id="cash-payment-instructions" class="payment-instructions mb-3 p-3 bg-light rounded d-none">
              <h5>Donación en efectivo:</h5>
              <p>Puedes acercarte a nuestra sede en Av. Ejemplo 123, de Lunes a Viernes de 9 a 18hs.</p>
            </div>

            <div id="payment-proof-container" class="mb-3">
              <%= f.label :payment_proof, "Comprobante de pago", class: "form-label" %>
              <%= f.file_field :payment_proof, 
                              class: "form-control", 
                              accept: "image/png,image/jpeg,application/pdf", 
                              data: { 
                                turbo_frame: "_top",
                                controller: "file-validation" 
                              } %>
              <small class="text-muted">Formatos aceptados: PNG, JPG, PDF (máx. 5MB). <span class="text-danger" id="proof-required-tag">Obligatorio</span></small>
            </div>
            
            <div class="d-grid gap-2">
              <%= f.submit "Realizar Donación", class: "btn btn-success btn-lg" %>
              <%= link_to "Cancelar", donations_path, class: "btn btn-outline-secondary" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const paymentMethodSelect = document.getElementById('payment-method-select');
    const bankInstructions = document.getElementById('bank-payment-instructions');
    const mercadoPagoInstructions = document.getElementById('mercado-pago-instructions');
    const cashInstructions = document.getElementById('cash-payment-instructions');
    const paymentProofContainer = document.getElementById('payment-proof-container');
    const paymentProofInput = paymentProofContainer.querySelector('input[type="file"]');
    const proofRequiredTag = document.getElementById('proof-required-tag');
    
    function updatePaymentMethod() {
      // Ocultar todas las instrucciones primero
      document.querySelectorAll('.payment-instructions').forEach(el => {
        el.classList.add('d-none');
      });
      
      // Mostrar las instrucciones según el método seleccionado
      if (paymentMethodSelect.value === 'bank_transfer') {
        bankInstructions.classList.remove('d-none');
        paymentProofInput.setAttribute('required', true);
        proofRequiredTag.textContent = 'Obligatorio';
        paymentProofContainer.classList.remove('d-none');
      } else if (paymentMethodSelect.value === 'mercado_pago') {
        mercadoPagoInstructions.classList.remove('d-none');
        paymentProofInput.removeAttribute('required');
        proofRequiredTag.textContent = 'Opcional';
        paymentProofContainer.classList.remove('d-none');
      } else if (paymentMethodSelect.value === 'cash') {
        cashInstructions.classList.remove('d-none');
        paymentProofInput.setAttribute('required', true);
        proofRequiredTag.textContent = 'Obligatorio';
        paymentProofContainer.classList.remove('d-none');
      }
    }
    
    // Aplicar inicialmente
    updatePaymentMethod();
    
    // Escuchar cambios
    paymentMethodSelect.addEventListener('change', updatePaymentMethod);
  });

  document.addEventListener('turbo:submit-start', function(event) {
    const form = event.target;
    const fileInput = form.querySelector('input[type="file"]');
    const paymentMethod = document.getElementById('payment-method-select').value;
    
    if (fileInput && fileInput.files.length === 0 && paymentMethod !== 'mercado_pago') {
      event.preventDefault();
      alert('Debe adjuntar un comprobante de pago para continuar.');
      
      // Destacar el campo con error
      fileInput.classList.add('is-invalid');
      const errorMessage = document.createElement('div');
      errorMessage.classList.add('invalid-feedback');
      errorMessage.textContent = 'El comprobante de pago es obligatorio';
      fileInput.parentNode.appendChild(errorMessage);
    }
  });
</script>